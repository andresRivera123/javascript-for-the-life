//Validaci칩n de formularios incorporada: Utiliza caracter칤sticas de validaci칩n de formularios HTML5, es muy poco segura.
/*
Esto se realiza mediante el uso de atributos de validaci칩n en los elementos del formulario.

required: Especifica si un campo de formulario debe completarse antes de que se pueda enviar el formulario.
minlength y maxlength: Especifican la longitud m칤nima y m치xima de los datos de texto (cadenas).
min y max: Especifican los valores m칤nimo y m치ximo de los tipos de entrada num칠ricos.
type: Especifica si los datos deben ser un n칰mero, una direcci칩n de correo electr칩nico o alg칰n otro tipo de preajuste espec칤fico.
pattern: Especifica una expresi칩n regular que define un patr칩n que los datos que se introduzcan deben seguir.
*/

//Validaci칩n con JS: Se codifica utilizando JavaScript. Esta validaci칩n es completamente personalizable, pero debes crearlo todo (o usar una biblioteca).

const formulario = document.getElementById("form");
const userName = document.getElementById("userNameJS");
const userEmail = document.querySelector("input[name='userEmailJS']");

const regUserName = /^[A-Za-z칌침츼치칄칠칈칤칍칩칔칰칖칲\s]+$/; //Validar solo letras
const regUserEmail = /^([a-zA-Z0-9._%-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})$/; //Validar correo

formulario.addEventListener("submit", (e) => {
  e.preventDefault();

  if (!regUserName.test(userName.value)) {
    console.log("Formato no v치lido, solo letras porfavor");
    return;
  }
  if (!regUserEmail.test(userEmail.value)) {
    console.log(
      "Formulario no v치lido, escriba correctamente el correo electr칩nico"
    );
    return;
  }

  console.log("FORMULARIO ENVIADO 游땘游땕游녧");
});
